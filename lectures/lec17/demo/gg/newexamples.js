

;(function () {
  var render_query = function() {
    try{
      $("#err").empty()
      var text = $("#query").val();
      eval("var specs = " + text);
      if(!("layers" in specs)) {
        specs = _.flatten([specs]);
        specs = {layers: specs};
      }
      console.log(specs)
      render(specs);
    } catch (err) {
      console.log(err)
      $("#err").text(err)
    }
  }


  var render = function(specs) {
    var ex   = function () {
      $("#examples").empty();
      return d3.select('#examples').append('span');
    };
    var guid = gg.util.Util.hashCode(JSON.stringify(specs));
    if (!specs.data) {
      throw Error("need data!")
    }
    //specs.opt = {optimize: true, guid: guid}
    var plot = gg(specs);
    plot.render(ex());
  }


  // This file contains the code to define the graphics and then
  // renders them using data randomly generated by data.js.

  $(document).ready(function() {
    $("#submit").click(render_query);
    render_query()

  });
})();


d3.csv('/data/data.csv', function(rows) {
  _.times(40, function(i) {
    var d =  gg.util.DateUtil.truncToWeek(new Date(Date.parse(rows[i].time)), null);
    var t = gg.util.DateUtil.byWeek(new Date(Date.parse(rows[i].time)), null);
    console.log([d.toString(), t, rows[i].time])
  })


})
